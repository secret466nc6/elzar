MKFILE_PATH := $(dir $(abspath $(lastword $(MAKEFILE_LIST))))
include $(MKFILE_PATH)/../Makefile.local

BUILDPATH=build/$(ACTION)


# =============================== LLVM EXE =================================== #
LLVM_CLANG = $(LLVM_PATH)/clang
LLVM_CLANGPP = $(LLVM_PATH)/clang++
LLVM_LLC = $(LLVM_PATH)/llc
LLVM_OPT = $(LLVM_PATH)/opt
LLVM_DIS = $(LLVM_PATH)/llvm-dis
LLVM_LINK = $(LLVM_PATH)/llvm-link


# =========================== RENAMER for libc =============================== #
RENAME_PASSFILE = $(MKFILE_PATH)/util/renamer/renamer_pass.so
RENAME_PASSNAME = -rename


# ================================ CCFLAGS =================================== #
CCFLAGS := $(CCFLAGS) -O3 -pthread -funroll-loops 
# flags for Hardware Transactional Memory
CCFLAGS := $(CCFLAGS) -mrtm
# no ctype macros like toupper();  this is important for libc substitutes
CCFLAGS := $(CCFLAGS) -D__NO_CTYPE=1
# we need to disable usage of llvm.mem* intrinsics, otherwise have recursion
CCFLAGS := $(CCFLAGS) -fno-builtin


# ================================== LIBS ==================================== #
LIBS := $(LIBS) -lm

# ================================ TARGETS =================================== #
# LLVM IR bitcode compiled from SRC -- sources to be linked together and
# processed by custom LLVM passes
LLS = $(addsuffix .bc, $(SRC))

# LLVM IR bitcode compiled from SRC2 -- source to be linked in the final
# executable, i.e., they are not processed by custom passes
LLS2= $(addsuffix .bc, $(SRC2))


.PHONY: all clean make_dirs

all:: make_dirs

make_dirs:
	mkdir -p build/$(ACTION)

# IR bitcode files
build/$(ACTION)/%.bc: src/%.c
	$(LLVM_CLANG) -emit-llvm $(CCFLAGS) -c $< -o $@

build/$(ACTION)/%.bc: src/%.C
	$(LLVM_CLANG) -emit-llvm $(CCFLAGS) -c $< -o $@

build/$(ACTION)/%.bc: src/%.cpp
	$(LLVM_CLANGPP) -emit-llvm $(CCFLAGS) $(CXXFLAGS) -c $< -o $@

build/$(ACTION)/%.bc: src/%.cxx
	$(LLVM_CLANGPP) -emit-llvm $(CCFLAGS) $(CXXFLAGS) -c $< -o $@

build/$(ACTION)/%.bc: src/%.cc
	$(LLVM_CLANGPP) -emit-llvm $(CCFLAGS) $(CXXFLAGS) -c $< -o $@


ifdef ANALYZE
  include $(MKFILE_PATH)/Makefile.analyze
endif

ifdef FI
  include $(MKFILE_PATH)/Makefile.fi
endif
